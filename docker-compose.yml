version: "3.5"
services:
  # front end service
  angular:
    image: ghcr.io/revature-reverse/angular:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rev-angular.rule=HostRegexp(`{host:.*}`)"
  # discovery service
  discovery:
    image: ghcr.io/revature-reverse/discovery:latest
    restart: unless-stopped
    environment:
      EUREKA_URI: 'http://discovery:8083/eureka'
      # This tells what path the ui is on
      EUREKA_PATH: 'discovery'
    labels:
      - "traefik.enable=true"
      # this sets a path to the discovery service dashboard. /discovery is the acctual dashboard /eureka is the static assets (html/css)
      - "traefik.http.routers.rev-discovery.rule=HostRegexp(`{host:.*}`) && (PathPrefix(`/eureka`) || PathPrefix(`/discovery`))"
      # the next two lines adds basic auth to the dashboard
      - "traefik.http.routers.rev-discovery.middlewares=rev-discovery-auth"
      - "traefik.http.middlewares.rev-discovery-auth.basicauth.users=${DISCOVERY_USER}"
  # api gateway
  gateway:
    image: ghcr.io/revature-reverse/gateway:latest
    labels:
      - "traefik.enable=true"
      # this sets the gateway path to be on /backend
      - "traefik.http.routers.rev-gateway.rule=HostRegexp(`{host:.*}`) && PathPrefix(`/backend`)"
      # the next two lines strip /backend from the path before it gets sent to the api gateway as it doesn't know it's going to be on /backend
      - "traefik.http.routers.rev-gateway.middlewares=rev-gateway-prefixes"
      - "traefik.http.middlewares.rev-gateway-prefixes.stripprefix.prefixes=/backend"
    environment:
      EUREKA_URI: 'http://discovery:8083/eureka'
    depends_on:
      - discovery
  # user service
  user-service:
    image: ghcr.io/revature-reverse/user-service:latest
    restart: unless-stopped
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET: ${SECRET}
      EUREKA_URI: 'http://discovery:8083/eureka'
    depends_on:
      - discovery
  # post service
  post-service:
    image: ghcr.io/revature-reverse/post-service:latest
    restart: unless-stopped
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      EUREKA_URI: 'http://discovery:8083/eureka'
      VALIDATION: 'http://user-service:8081/users/validate'
    depends_on:
      - discovery
  # reverse proxy using traefik
  proxy:
    image: traefik
    restart: unless-stopped
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - './traefik:/traefik'
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"

